" Color scheme settings
let g:solarized_termcolors=256
syntax enable
set background=dark
colorscheme solarized

" Turn off swap file
set noswapfile
set nobackup
set nowb

" Turn off model
set nomodeline

" Display tabs and trailing spaces visually
set list listchars=tab:\ \ ,trail:·
set nowrap                      " Don't wrap lines
set linebreak                   " Wrap lines at convenient points

" Scrolling
set scrolloff=8                 " Start scrolling when we're 8 lines away from margins
set sidescrolloff=15
set sidescroll=1

" Search
set incsearch                   " Find the next match as we type the search
set hlsearch                    " Highlight searches by default
set ignorecase                  " Ignore case when searching...
set smartcase                   " ...unless we type a capital

" Clear the latest search result
nnoremap // :let @/=""<CR>

" Indentation
set breakindent
set autoindent
set smartindent
set smarttab
" length of an actual \t character:
set tabstop=2
" length to use when shifting text (eg. <<, >> and == commands)
" (0 for ‘tabstop’):
set shiftwidth=0
" length to use when editing text (eg. TAB and BS keys)
" (0 for ‘tabstop’, -1 for ‘shiftwidth’):
set softtabstop=-1
" When 'expandtab' is set, indenting is always done using space characters only.
set expandtab

filetype plugin on
filetype indent on

" Auto Completion
set wildmode=list:longest
set wildmenu                    " enable ctrl-n and ctrl-p to scroll thru matches
set wildignore=*.o,*.obj,*~     " stuff to ignore when tab completing
set wildignore+=*vim/backups*
set wildignore+=*sass-cache*
set wildignore+=*DS_Store*
set wildignore+=vendor/rails/**
set wildignore+=vendor/cache/**
set wildignore+=*.gem
set wildignore+=log/**
set wildignore+=tmp/**
set wildignore+=*.png,*.jpg,*.gif

" Folds
set foldmethod=indent              " fold based on indent
set foldnestmax=3                  " deepest fold is 3 levels
set nofoldenable                   " dont fold by default

set number                         " Line numbers are good
set mouse=a                        " Enable mouse control
set clipboard^=unnamed,unnamedplus " Align copy behavior across platform
set hidden                         " Buffers can exist in the background without being in a window
set visualbell                     " No sounds
set autoread                       " Reload files changed outside vim

" Tab shortcuts
nnoremap <silent> <C-t>n :tabnext<cr>
nnoremap <silent> <C-t>p :tabprevious<cr>

" Auto close preview window when enter insert mode
autocmd InsertEnter * if pumvisible() == 0|pclose|endif

" Resolve path when using open file under cursor
set path=.,src
set suffixesadd=.js,.jsx

function! LoadMainNodeModule(fname)
  let nodeModules = "./node_modules/"
  let packageJsonPath = nodeModules . a:fname . "/package.json"

  if filereadable(packageJsonPath)
    return nodeModules . a:fname . "/" . json_decode(join(readfile(packageJsonPath))).main
  else
    return nodeModules . a:fname
  endif
endfunction

set includeexpr=LoadMainNodeModule(v:fname)

" File encoding
set fileencodings=utf-8,gb18030,gbk,gb2312,latin1,ucs-bom,default

" Add Python3 support for neovim
let g:python_host_prog = substitute(system('which python'), '\n\+$', '', '')
let g:python3_host_prog = substitute(system('which python3'), '\n\+$', '', '')
